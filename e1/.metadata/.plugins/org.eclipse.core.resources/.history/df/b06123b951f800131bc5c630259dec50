#include "cute.h"
#include "ide_listener.h"
#include "xml_listener.h"
#include "cute_runner.h"
#include <regex>
#include <vector>

void cpluspluscomRegexExample() {
	std::vector<int> range;
	for (auto i : range; auto j : range; auto l : range) {

	}
	std::string s {"this subject has a submarine as a subsequence"};
	std::smatch m {};
	std::regex e {"\\b(sub)([^ ]*)"};
	ASSERT(std::regex_search(s, m, e));
	ASSERT_EQUAL("subject", m[0]);
    s = m.suffix().str();
	ASSERT(std::regex_search(s, m, e));
	ASSERT_EQUAL("submarine", m[0]);
    s = m.suffix().str();
	ASSERT(std::regex_search(s, m, e));
	ASSERT_EQUAL("subsequence", m[0]);
}

void runAllTests(int argc, char const *argv[]){
	cute::suite s{};
	//TODO add your test here
	s.push_back(CUTE(cpluspluscomRegexExample));
	cute::xml_file_opener xmlfile(argc,argv);
	cute::xml_listener<cute::ide_listener<> >  lis(xmlfile.out);
	cute::makeRunner(lis,argc,argv)(s, "AllTests");
}

int main(int argc, char const *argv[]){
    runAllTests(argc,argv);
    return 0;
}



